[{"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\index.js":"1","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\App.js":"2","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\reportWebVitals.js":"3","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\Navbar.js":"4","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\Profile.js":"5","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\Home.js":"6","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\SignUp.js":"7","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\Login.js":"8","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\createpost.js":"9","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\CreatePost.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":827,"mtime":1606995936648,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":733,"mtime":1606995502579,"results":"15","hashOfConfig":"12"},{"size":1038,"mtime":1607007674622,"results":"16","hashOfConfig":"12"},{"size":891,"mtime":1606989231336,"results":"17","hashOfConfig":"12"},{"size":2455,"mtime":1607067133226,"results":"18","hashOfConfig":"12"},{"size":2350,"mtime":1607065967761,"results":"19","hashOfConfig":"12"},{"size":1269,"mtime":1606995471956,"results":"20","hashOfConfig":"12"},{"size":3061,"mtime":1607064156006,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ngyug6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\index.js",[],["45","46"],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\App.js",[],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\reportWebVitals.js",[],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\Navbar.js",[],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\Profile.js",[],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\Home.js",[],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\SignUp.js",["47","48"],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\Login.js",["49","50"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const postData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid email.\" })\r\n            return\r\n        }\r\n        fetch(\"/login\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\", data.token)\r\n                    localStorage.setItem(\"jwt\", JSON.stringify(data.user))\r\n                    M.toast({ html: \"successfully signed in.\" })\r\n                    history.push('/')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"authcard input-field\">\r\n                <h2>CommBlogg</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn waves-effect #212121 grey darken-4\"\r\n                    onClick={() => postData()}>\r\n                    Login\r\n                </button>\r\n                <h6>\r\n                    <Link to='/signup'><i>Don't have an account?</i></Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\createpost.js",["51","52"],"C:\\Users\\SAHIL LOBO\\Desktop\\CommBlogg\\client\\src\\components\\screens\\CreatePost.js",["53"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst CreatePost = () => {\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    useEffect(() => {\r\n        if (url) {\r\n            fetch(\"/createpost\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic: url\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n\r\n                    if (data.error) {\r\n                        M.toast({ html: data.error })\r\n                    }\r\n                    else {\r\n                        M.toast({ html: \"Created post Successfully\" })\r\n                        history.push('/')\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [url])\r\n\r\n    const postDetails = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"CommBlogg\")\r\n        data.append(\"cloud_name\", \"commblogg\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/commblogg/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\" style={{ margin: \"30px auto\", maxWidth: \"500px\", padding: \"20px\", textAlign: \"center\" }}>\r\n            <h3>New Post</h3>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)} />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn waves-effect #212121 grey darken-4\" >\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\"\r\n                        onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect #212121 grey darken-4\"\r\n                onClick={() => postDetails()}>\r\n                Post!\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":24,"nodeType":"60","messageId":"61","endLine":10,"endColumn":25,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":49,"nodeType":"60","messageId":"61","endLine":10,"endColumn":50,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":24,"nodeType":"60","messageId":"61","endLine":9,"endColumn":25,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":49,"nodeType":"60","messageId":"61","endLine":9,"endColumn":50,"suggestions":"65"},{"ruleId":"66","severity":2,"message":"67","line":4,"column":31,"nodeType":"68","endLine":4,"endColumn":39},{"ruleId":"66","severity":2,"message":"67","line":5,"column":29,"nodeType":"68","endLine":5,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":37,"column":8,"nodeType":"71","endLine":37,"endColumn":13,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["75","76"],["77","78"],["79","80"],["81","82"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"createpost\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.","ArrayExpression",["83"],"no-global-assign","no-unsafe-negation",{"messageId":"84","fix":"85","desc":"86"},{"messageId":"87","fix":"88","desc":"89"},{"messageId":"84","fix":"90","desc":"86"},{"messageId":"87","fix":"91","desc":"89"},{"messageId":"84","fix":"92","desc":"86"},{"messageId":"87","fix":"93","desc":"89"},{"messageId":"84","fix":"94","desc":"86"},{"messageId":"87","fix":"95","desc":"89"},{"desc":"96","fix":"97"},"removeEscape",{"range":"98","text":"99"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"100","text":"101"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"102","text":"99"},{"range":"103","text":"101"},{"range":"104","text":"99"},{"range":"105","text":"101"},{"range":"106","text":"99"},{"range":"107","text":"101"},"Update the dependencies array to be: [body, history, title, url]",{"range":"108","text":"109"},[375,376],"",[375,375],"\\",[400,401],[400,400],[331,332],[331,331],[356,357],[356,356],[1274,1279],"[body, history, title, url]"]